{"ast":null,"code":"var _jsxFileName = \"/Users/abezzam/Das's-term/terminal/src/terminal/Terminal.js\";\nimport React, { Component } from 'react';\nimport './terminal.css';\n\nclass Terminal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dragging: false,\n      top: 0,\n      left: 0,\n      command: '',\n      terminalText: '',\n      cursor: true\n    };\n    this.prompt = '$> ';\n    this.terminal = React.createRef();\n    this.terminalBody = React.createRef();\n    this.cursor = React.createRef();\n\n    this.close = () => {};\n\n    this.toggleWidth = () => {};\n\n    this.blinkCursor = () => this.setState({\n      cursor: !this.state.cursor,\n      timeout: setTimeout(this.blinkCursor, 400)\n    });\n\n    this.stopCursor = () => {\n      clearTimeout(this.state.timeout);\n      this.setState({\n        timeout: null,\n        cursor: true\n      });\n    };\n\n    this.startDrag = ({\n      clientX,\n      clientY\n    }) => this.setState({\n      dragging: true,\n      startX: clientX,\n      startY: clientY\n    });\n\n    this.drag = ({\n      clientX,\n      clientY\n    }) => {\n      const {\n        top,\n        left,\n        startX,\n        startY,\n        dragging\n      } = this.state;\n      if (!dragging) return;\n      this.setState({\n        top: top + clientY - startY,\n        left: left + clientX - startX,\n        startX: clientX,\n        startY: clientY\n      });\n    };\n\n    this.endDrag = () => this.setState({\n      dragging: false\n    });\n\n    this.handleInput = ({\n      key\n    }) => {\n      let ignoreKeys = ['Meta', 'Alt', 'Shift', 'Control', 'Escape', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n      if (key == 'Backspace') {\n        this.setState({\n          command: this.state.command.slice(0, -1)\n        });\n      } else if (key == 'Enter') {\n        this.handleCommand(this.state.command);\n        this.setState({\n          command: ''\n        });\n      } else if (ignoreKeys.includes(key)) {\n        return;\n      } else {\n        this.setState({\n          command: this.state.command + key\n        });\n      }\n    };\n\n    this.handleCommand = command => {\n      let output;\n\n      switch (command) {\n        case 'about':\n          output = `\nI'm a software engineer based in New York City with a passion for technology. I\nwork mainly in the web development industry, though I have worked in distributed\nsystems / blockchain as well. My current favorite language is Elixir as it\noffers a functional programming paradigm with a syntax which resembles Ruby, and\nmakes concurrent programming easy.\n\nGitHub: https://github.com/alexdovzhanyn\nTwitter: https://twitter.com/alexdovzhanyn`;\n          break;\n\n        case 'skills':\n          output = `\nLANGUAGES        FRAMEWORKS        DATABASE        OTHER\n\nElixir           React             Postres         Wordpress\nRuby             Rails             MySQL           AWS\nPython           Sinatra           MongoDB         Heroku\nPHP              Sass              LevelDB         Git\nJavascript       Phoenix\n`;\n          break;\n\n        case 'projects':\n          output = `\nelixium    seven_deadly_sins    zephyre    devrant_gem    essence\npico    alchemy_vm\n`;\n          break;\n\n        default:\n          output = `Command '${command}' not recognized.`;\n      }\n\n      this.write(`\\n${this.prompt}${command}\\n${output}`);\n    };\n\n    this.write = text => {\n      this.setState({\n        terminalText: this.state.terminalText + text + '\\n'\n      });\n      this.terminalBody.current.scrollTop = this.terminalBody.current.scrollHeight;\n    };\n  }\n\n  componentDidMount() {\n    this.terminal.current.focus();\n    this.write(`\nWelcome to my website. Type one of the following commands to explore:\n\nCOMMAND         DESCRIPTION\n\nabout           outputs a short blurb about me\nprojects        projects that I have worked on\nproject <name>  shows details about a specific project\nskills          lists languages and skills that I have learned\n    `);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"terminal\",\n      ref: this.terminal,\n      onKeyDown: this.handleInput,\n      onFocus: this.blinkCursor,\n      onBlur: this.stopCursor,\n      tabIndex: \"0\",\n      style: {\n        top: this.state.top,\n        left: this.state.left\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar\",\n      onMouseDown: this.startDrag,\n      onMouseMove: this.drag,\n      onMouseUp: this.endDrag,\n      style: {\n        cursor: this.state.dragging ? 'grabbing' : 'grab'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.close,\n      className: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWidth,\n      className: \"toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"./alexdovzhanyn.sh\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      ref: this.terminalBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, this.state.terminalText), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"prompt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, this.prompt, this.state.command, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor\",\n      ref: this.cursor,\n      style: {\n        display: this.state.cursor ? 'inline-block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Terminal;","map":{"version":3,"sources":["/Users/abezzam/Das's-term/terminal/src/terminal/Terminal.js"],"names":["React","Component","Terminal","state","dragging","top","left","command","terminalText","cursor","prompt","terminal","createRef","terminalBody","close","toggleWidth","blinkCursor","setState","timeout","setTimeout","stopCursor","clearTimeout","startDrag","clientX","clientY","startX","startY","drag","endDrag","handleInput","key","ignoreKeys","slice","handleCommand","includes","output","write","text","current","scrollTop","scrollHeight","componentDidMount","focus","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './terminal.css'\n\nclass Terminal extends Component {\n  state = {\n    dragging: false,\n    top: 0,\n    left: 0,\n    command: '',\n    terminalText: '',\n    cursor: true\n  }\n\n  prompt = '$> '\n  terminal = React.createRef()\n  terminalBody = React.createRef()\n  cursor = React.createRef()\n\n  close = () => {\n\n  }\n\n  toggleWidth = () => {\n\n  }\n\n  blinkCursor = () => this.setState({\n    cursor: !this.state.cursor,\n    timeout: setTimeout(this.blinkCursor, 400)\n  })\n\n  stopCursor = () => {\n    clearTimeout(this.state.timeout)\n\n    this.setState({\n      timeout: null,\n      cursor: true\n    })\n  }\n\n  startDrag = ({ clientX, clientY }) => this.setState({\n    dragging: true,\n    startX: clientX,\n    startY: clientY\n  })\n\n  drag = ({ clientX, clientY }) => {\n    const { top, left, startX, startY, dragging } = this.state\n\n    if (!dragging) return\n\n    this.setState({\n      top: top + clientY - startY,\n      left: left + clientX - startX,\n      startX: clientX,\n      startY: clientY\n    })\n  }\n\n  endDrag = () => this.setState({ dragging: false })\n\n  handleInput = ({ key }) => {\n    let ignoreKeys = [\n      'Meta',\n      'Alt',\n      'Shift',\n      'Control',\n      'Escape',\n      'ArrowUp',\n      'ArrowDown',\n      'ArrowLeft',\n      'ArrowRight'\n    ]\n\n    if (key == 'Backspace') {\n      this.setState({ command: this.state.command.slice(0, -1) })\n    } else if (key == 'Enter') {\n      this.handleCommand(this.state.command)\n      this.setState({ command: '' })\n    } else if (ignoreKeys.includes(key)) {\n      return\n    } else {\n      this.setState({ command: this.state.command + key })\n    }\n  }\n\n  handleCommand = command => {\n    let output\n\n    switch(command) {\n      case 'about':\n        output = `\nI'm a software engineer based in New York City with a passion for technology. I\nwork mainly in the web development industry, though I have worked in distributed\nsystems / blockchain as well. My current favorite language is Elixir as it\noffers a functional programming paradigm with a syntax which resembles Ruby, and\nmakes concurrent programming easy.\n\nGitHub: https://github.com/alexdovzhanyn\nTwitter: https://twitter.com/alexdovzhanyn`\n        break\n      case 'skills':\n        output = `\nLANGUAGES        FRAMEWORKS        DATABASE        OTHER\n\nElixir           React             Postres         Wordpress\nRuby             Rails             MySQL           AWS\nPython           Sinatra           MongoDB         Heroku\nPHP              Sass              LevelDB         Git\nJavascript       Phoenix\n`\n        break\n      case 'projects':\n        output = `\nelixium    seven_deadly_sins    zephyre    devrant_gem    essence\npico    alchemy_vm\n`\n        break\n      default:\n        output = `Command '${command}' not recognized.`\n    }\n\n    this.write(`\\n${this.prompt}${command}\\n${output}`)\n  }\n\n  write = text => {\n    this.setState({ terminalText: this.state.terminalText + text + '\\n'})\n    this.terminalBody.current.scrollTop = this.terminalBody.current.scrollHeight\n  }\n\n  componentDidMount() {\n    this.terminal.current.focus()\n    this.write(`\nWelcome to my website. Type one of the following commands to explore:\n\nCOMMAND         DESCRIPTION\n\nabout           outputs a short blurb about me\nprojects        projects that I have worked on\nproject <name>  shows details about a specific project\nskills          lists languages and skills that I have learned\n    `)\n  }\n\n  render() {\n    return (\n      <div\n        className=\"terminal\"\n        ref={ this.terminal }\n        onKeyDown={ this.handleInput }\n        onFocus={ this.blinkCursor }\n        onBlur={ this.stopCursor }\n        tabIndex=\"0\"\n        style={{\n          top: this.state.top,\n          left: this.state.left\n      }}>\n        <div\n          className=\"toolbar\"\n          onMouseDown={ this.startDrag }\n          onMouseMove={ this.drag }\n          onMouseUp={ this.endDrag }\n          style={{\n            cursor: this.state.dragging ? 'grabbing' : 'grab',\n        }}>\n          <div className=\"buttonContainer\">\n            <button onClick={ this.close } className=\"close\"/>\n            <button onClick={ this.toggleWidth } className=\"toggle\"/>\n          </div>\n\n          <p>./alexdovzhanyn.sh</p>\n        </div>\n        <div className=\"body\" ref={ this.terminalBody }>\n          <pre>{ this.state.terminalText }</pre>\n          <p className=\"prompt\">\n            { this.prompt }\n            { this.state.command }\n            <span\n              className=\"cursor\"\n              ref={ this.cursor }\n              style={{ display: this.state.cursor ? 'inline-block' : 'none' }}\n            />\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Terminal\n"]},"metadata":{},"sourceType":"module"}