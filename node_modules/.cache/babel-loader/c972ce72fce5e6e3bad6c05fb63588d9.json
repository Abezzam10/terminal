{"ast":null,"code":"var _jsxFileName = \"/Users/abezzam/Das's-term/terminal/src/terminal/Terminal.js\";\nimport React, { Component } from 'react';\nimport './terminal.css';\n\nclass Terminal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dragging: false,\n      top: 0,\n      left: 0,\n      command: '',\n      terminalText: '',\n      cursor: true\n    };\n    this.prompt = '$> ';\n    this.terminal = React.createRef();\n    this.terminalBody = React.createRef();\n    this.cursor = React.createRef();\n\n    this.close = () => {};\n\n    this.toggleWidth = () => {};\n\n    this.blinkCursor = () => this.setState({\n      cursor: !this.state.cursor,\n      timeout: setTimeout(this.blinkCursor, 400)\n    });\n\n    this.stopCursor = () => {\n      clearTimeout(this.state.timeout);\n      this.setState({\n        timeout: null,\n        cursor: true\n      });\n    };\n\n    this.startDrag = ({\n      clientX,\n      clientY\n    }) => this.setState({\n      dragging: true,\n      startX: clientX,\n      startY: clientY\n    });\n\n    this.drag = ({\n      clientX,\n      clientY\n    }) => {\n      const {\n        top,\n        left,\n        startX,\n        startY,\n        dragging\n      } = this.state;\n      if (!dragging) return;\n      this.setState({\n        top: top + clientY - startY,\n        left: left + clientX - startX,\n        startX: clientX,\n        startY: clientY\n      });\n    };\n\n    this.endDrag = () => this.setState({\n      dragging: false\n    });\n\n    this.handleInput = ({\n      key\n    }) => {\n      let ignoreKeys = ['Meta', 'Alt', 'Shift', 'Control', 'Escape', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n      if (key == 'Backspace') {\n        this.setState({\n          command: this.state.command.slice(0, -1)\n        });\n      } else if (key == 'Enter') {\n        this.handleCommand(this.state.command);\n        this.setState({\n          command: ''\n        });\n      } else if (ignoreKeys.includes(key)) {\n        return;\n      } else {\n        this.setState({\n          command: this.state.command + key\n        });\n      }\n    };\n\n    this.handleCommand = command => {\n      let output;\n\n      switch (command) {\n        case 'ls':\n          output = `\nI'm a Graduate student and a software engineer based in New York City with a passion for technology. \n\nI work mainly in the web development industry, though I have worked on Core Data Platforms, Analytics \nand ML - Recommender Systems in my current and past internships.\n\nMy current favorite languages are Python, JavaScript, Lua as it offers a functional programming \nparadigm with a syntax which is domain friendly.`;\n          break;\n\n        case 'cd skills':\n          output = `\nLANGUAGES        FRAMEWORKS        DATABASE        OTHER\n\nPython           ReactJS           Postgres        AWS\nJavaScript       Django            MySQL           Heroku\nC++              Flutter           MongoDB         Git\nC\nJava\nPHP                                           \n`;\n          break;\n\n        case 'cd music':\n          output = `\nGenres           FAV BANDS         \n\nOrchestra        Schubert, Bach, Vivaldi, Strauss, Grieg, Andrea Bocelli\nRock             Pink Floyd, ACDC, Winger, White Snake, Deep Purple\nMetal            Dream Theater\nDeath Metal      Opeth, Ghost, Slayer, Slipknot, Machine Head\n\nMy playlist is on spotify as: https://open.spotify.com/playlist/2T8XbdsP3CKIUgTldqLNOl\n`;\n          break;\n\n        case 'cd projects':\n          output = `\nOSSP    Lane_finder     Weather_web     CAP\n\nCommand 'cd <project_name>' into any one of these projects to view a detailed description about them.\n`;\n          break;\n\n        case 'ls -a':\n          output = `\nprojects\nskills\nmusic           \ncontact`;\n          break;\n\n        case 'cd contact':\n          output = `\n  GitHub: https://github.com/Abezzam10\n  Twitter: https://twitter.com/anirudhdas97         \n`;\n          break;\n\n        case 'cd Lane_finder':\n          output = `\nThis is a cool project I had worked on to detect road signs and street lanes in a moving vehicle. \nThe primary intuition was to highlight lanes so that the vehicle could allign its position according \nto the width of the road. \n\nThough I did not entirely work on the vehicle positioning, I enjoyed building out the lane detection \npattern and trained the model rigorously to identify key elements that could boost the experience \nof autonomous vehicles.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Built an advanced lane-detection system with Python and OpenCV using edge-detection and gradient thresholding\n• Enhanced pipeline with Keras with state-of-the-art deep learning architecture boosting accuracy by 80%\n• Optimized model overcoming environmental changes such as shadows in real-time videos during driving by 20%\n• Utilized: Python, TensorFlow, Keras, Spark ML, OpenCV, SQL        \n`;\n          break;\n\n        case 'cd Weather_web':\n          output = `\n     \nAn interesting project I had worked on to hone my skills in web and full stack development. \nThe functionality of this website is to provide a real-time update of the weather and to promt users \nas to what they should be aware of when stepping out of the house.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Developed an interactive full-stack website application to detect current weather based on the user's location\n• Boosted portal traffic by 70% by designing a lucid, user-friendly interface in JavaScript for submitting requests\n• Incorporated client-side features and minimized server-side validations thereby improving performance by 25%\n• Utilized: JavaScript, NodeJS, Express, Ajax, REST APIs, Git/GitHub, HTML5, CSS3, MongoDB\n`;\n          break;\n\n        case 'cd OSSP':\n          output = `\n\nA microservice based app to connect users with businesses and provide a SASS based multiplatform. \nThis is different from other in market competitors in that the cost of delivery and operation \nis spread fairly amongst the consumers with each order. The software platform supports business \nadministration of merchandise and information and consumer registration. This project is meant to be a \nplatform for developers to find and independently choose the tools necessary to build out operational \nservices for local businesses.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Devised, tested Microservices carrying app and business logic resulting in extended scalability of features by 85%\n• Directed Docker configurations for Microservices, database, API to achieve consistency in packaging software\n• Utilized: Kotlin, Java, NodeJS, Python, Flask, Express, Gradle, Docker, GitHub, Travis CI, Swagger Docs\n`;\n          break;\n\n        case 'cd CAP':\n          output = `\n\nThis is one of my projects where I have designed an e-commerce website using OOP's concepts. Backend was written in \nPython and I used JS styling for frontend.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Crafted an identity management system for e-commerce web applications based on products, goods, cost\n• Built internal multi-platform data exchange automation to ease use prioritization of products and quantity by 30%\n• Utilized: Python, ColdFusion, HTML, JavaScript, XML\n`;\n          break;\n\n        default:\n          output = `Command '${command}' not recognized.`;\n      }\n\n      this.write(`\\n${this.prompt}${command}\\n${output}`);\n    };\n\n    this.write = text => {\n      this.setState({\n        terminalText: this.state.terminalText + text + '\\n'\n      });\n      this.terminalBody.current.scrollTop = this.terminalBody.current.scrollHeight;\n    };\n  }\n\n  componentDidMount() {\n    this.terminal.current.focus();\n    this.write(`\nWelcome to my website. Type one of the following commands to explore:\n\nCOMMAND         DESCRIPTION\n\nls              outputs a short blurb about me\nls -a           shows the contents within this terminal\ncd projects     projects that I have worked on\ncd skills       lists languages and skills that I have learnt am learning\ncd music        gives a brief description of my taste in muisic\ncd contact      my contact information\n    `);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"terminal\",\n      ref: this.terminal,\n      onKeyDown: this.handleInput,\n      onFocus: this.blinkCursor,\n      onBlur: this.stopCursor,\n      tabIndex: \"0\",\n      style: {\n        top: this.state.top,\n        left: this.state.left\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar\",\n      onMouseDown: this.startDrag,\n      onMouseMove: this.drag,\n      onMouseUp: this.endDrag,\n      style: {\n        cursor: this.state.dragging ? 'grabbing' : 'grab'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.close,\n      className: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWidth,\n      className: \"toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, \"./anirudhdas97.sh\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      ref: this.terminalBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, this.state.terminalText), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"prompt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, this.prompt, this.state.command, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor\",\n      ref: this.cursor,\n      style: {\n        display: this.state.cursor ? 'inline-block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Terminal;","map":{"version":3,"sources":["/Users/abezzam/Das's-term/terminal/src/terminal/Terminal.js"],"names":["React","Component","Terminal","state","dragging","top","left","command","terminalText","cursor","prompt","terminal","createRef","terminalBody","close","toggleWidth","blinkCursor","setState","timeout","setTimeout","stopCursor","clearTimeout","startDrag","clientX","clientY","startX","startY","drag","endDrag","handleInput","key","ignoreKeys","slice","handleCommand","includes","output","write","text","current","scrollTop","scrollHeight","componentDidMount","focus","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './terminal.css'\n\nclass Terminal extends Component {\n  state = {\n    dragging: false,\n    top: 0,\n    left: 0,\n    command: '',\n    terminalText: '',\n    cursor: true\n  }\n\n  prompt = '$> '\n  terminal = React.createRef()\n  terminalBody = React.createRef()\n  cursor = React.createRef()\n\n  close = () => {\n\n  }\n\n  toggleWidth = () => {\n\n  }\n\n  blinkCursor = () => this.setState({\n    cursor: !this.state.cursor,\n    timeout: setTimeout(this.blinkCursor, 400)\n  })\n\n  stopCursor = () => {\n    clearTimeout(this.state.timeout)\n\n    this.setState({\n      timeout: null,\n      cursor: true\n    })\n  }\n\n  startDrag = ({ clientX, clientY }) => this.setState({\n    dragging: true,\n    startX: clientX,\n    startY: clientY\n  })\n\n  drag = ({ clientX, clientY }) => {\n    const { top, left, startX, startY, dragging } = this.state\n\n    if (!dragging) return\n\n    this.setState({\n      top: top + clientY - startY,\n      left: left + clientX - startX,\n      startX: clientX,\n      startY: clientY\n    })\n  }\n\n  endDrag = () => this.setState({ dragging: false })\n\n  handleInput = ({ key }) => {\n    let ignoreKeys = [\n      'Meta',\n      'Alt',\n      'Shift',\n      'Control',\n      'Escape',\n      'ArrowUp',\n      'ArrowDown',\n      'ArrowLeft',\n      'ArrowRight'\n    ]\n\n    if (key == 'Backspace') {\n      this.setState({ command: this.state.command.slice(0, -1) })\n    } else if (key == 'Enter') {\n      this.handleCommand(this.state.command)\n      this.setState({ command: '' })\n    } else if (ignoreKeys.includes(key)) {\n      return\n    } else {\n      this.setState({ command: this.state.command + key })\n    }\n  }\n\n  handleCommand = command => {\n    let output\n\n    switch(command) {\n      case 'ls':\n        output = `\nI'm a Graduate student and a software engineer based in New York City with a passion for technology. \n\nI work mainly in the web development industry, though I have worked on Core Data Platforms, Analytics \nand ML - Recommender Systems in my current and past internships.\n\nMy current favorite languages are Python, JavaScript, Lua as it offers a functional programming \nparadigm with a syntax which is domain friendly.`\n        break\n      case 'cd skills':\n        output = `\nLANGUAGES        FRAMEWORKS        DATABASE        OTHER\n\nPython           ReactJS           Postgres        AWS\nJavaScript       Django            MySQL           Heroku\nC++              Flutter           MongoDB         Git\nC\nJava\nPHP                                           \n`\n        break\n      case 'cd music':\n        output = `\nGenres           FAV BANDS         \n\nOrchestra        Schubert, Bach, Vivaldi, Strauss, Grieg, Andrea Bocelli\nRock             Pink Floyd, ACDC, Winger, White Snake, Deep Purple\nMetal            Dream Theater\nDeath Metal      Opeth, Ghost, Slayer, Slipknot, Machine Head\n\nMy playlist is on spotify as: https://open.spotify.com/playlist/2T8XbdsP3CKIUgTldqLNOl\n`\n\n        break\n      case 'cd projects':\n        output = `\nOSSP    Lane_finder     Weather_web     CAP\n\nCommand 'cd <project_name>' into any one of these projects to view a detailed description about them.\n`\n        break\n      case 'ls -a':\n        output = `\nprojects\nskills\nmusic           \ncontact`\n\n      break\n    case 'cd contact':\n      output = `\n  GitHub: https://github.com/Abezzam10\n  Twitter: https://twitter.com/anirudhdas97         \n`\n      break\n    case 'cd Lane_finder':\n      output = `\nThis is a cool project I had worked on to detect road signs and street lanes in a moving vehicle. \nThe primary intuition was to highlight lanes so that the vehicle could allign its position according \nto the width of the road. \n\nThough I did not entirely work on the vehicle positioning, I enjoyed building out the lane detection \npattern and trained the model rigorously to identify key elements that could boost the experience \nof autonomous vehicles.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Built an advanced lane-detection system with Python and OpenCV using edge-detection and gradient thresholding\n• Enhanced pipeline with Keras with state-of-the-art deep learning architecture boosting accuracy by 80%\n• Optimized model overcoming environmental changes such as shadows in real-time videos during driving by 20%\n• Utilized: Python, TensorFlow, Keras, Spark ML, OpenCV, SQL        \n`\n  break\n    case 'cd Weather_web':\n      output = `\n     \nAn interesting project I had worked on to hone my skills in web and full stack development. \nThe functionality of this website is to provide a real-time update of the weather and to promt users \nas to what they should be aware of when stepping out of the house.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Developed an interactive full-stack website application to detect current weather based on the user's location\n• Boosted portal traffic by 70% by designing a lucid, user-friendly interface in JavaScript for submitting requests\n• Incorporated client-side features and minimized server-side validations thereby improving performance by 25%\n• Utilized: JavaScript, NodeJS, Express, Ajax, REST APIs, Git/GitHub, HTML5, CSS3, MongoDB\n`\n  break\n    case 'cd OSSP':\n      output = `\n\nA microservice based app to connect users with businesses and provide a SASS based multiplatform. \nThis is different from other in market competitors in that the cost of delivery and operation \nis spread fairly amongst the consumers with each order. The software platform supports business \nadministration of merchandise and information and consumer registration. This project is meant to be a \nplatform for developers to find and independently choose the tools necessary to build out operational \nservices for local businesses.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Devised, tested Microservices carrying app and business logic resulting in extended scalability of features by 85%\n• Directed Docker configurations for Microservices, database, API to achieve consistency in packaging software\n• Utilized: Kotlin, Java, NodeJS, Python, Flask, Express, Gradle, Docker, GitHub, Travis CI, Swagger Docs\n`\n  break\n    case 'cd CAP':\n      output = `\n\nThis is one of my projects where I have designed an e-commerce website using OOP's concepts. Backend was written in \nPython and I used JS styling for frontend.\n\nHere's a brief overview to highlight my work and the tech stack I used:\n\n• Crafted an identity management system for e-commerce web applications based on products, goods, cost\n• Built internal multi-platform data exchange automation to ease use prioritization of products and quantity by 30%\n• Utilized: Python, ColdFusion, HTML, JavaScript, XML\n`\n        break\n      default:\n        output = `Command '${command}' not recognized.`\n    }\n\n    this.write(`\\n${this.prompt}${command}\\n${output}`)\n  }\n\n  write = text => {\n    this.setState({ terminalText: this.state.terminalText + text + '\\n'})\n    this.terminalBody.current.scrollTop = this.terminalBody.current.scrollHeight\n  }\n\n  componentDidMount() {\n    this.terminal.current.focus()\n    this.write(`\nWelcome to my website. Type one of the following commands to explore:\n\nCOMMAND         DESCRIPTION\n\nls              outputs a short blurb about me\nls -a           shows the contents within this terminal\ncd projects     projects that I have worked on\ncd skills       lists languages and skills that I have learnt am learning\ncd music        gives a brief description of my taste in muisic\ncd contact      my contact information\n    `)\n  }\n\n  render() {\n    return (\n      <div\n        className=\"terminal\"\n        ref={ this.terminal }\n        onKeyDown={ this.handleInput }\n        onFocus={ this.blinkCursor }\n        onBlur={ this.stopCursor }\n        tabIndex=\"0\"\n        style={{\n          top: this.state.top,\n          left: this.state.left\n      }}>\n        <div\n          className=\"toolbar\"\n          onMouseDown={ this.startDrag }\n          onMouseMove={ this.drag }\n          onMouseUp={ this.endDrag }\n          style={{\n            cursor: this.state.dragging ? 'grabbing' : 'grab',\n        }}>\n          <div className=\"buttonContainer\">\n            <button onClick={ this.close } className=\"close\"/>\n            <button onClick={ this.toggleWidth } className=\"toggle\"/>\n          </div>\n\n          <p>./anirudhdas97.sh</p>\n        </div>\n        <div className=\"body\" ref={ this.terminalBody }>\n          <pre>{ this.state.terminalText }</pre>\n          <p className=\"prompt\">\n            { this.prompt }\n            { this.state.command }\n            <span\n              className=\"cursor\"\n              ref={ this.cursor }\n              style={{ display: this.state.cursor ? 'inline-block' : 'none' }}\n            />\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Terminal\n\n"]},"metadata":{},"sourceType":"module"}